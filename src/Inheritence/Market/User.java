////EXERCISE:
////        Create multiple user registration classes for the following user types:
////        - Customer
////        - Seller
////        - Admin
////        All classes inherit from a base class "User"
////        User contains => fullName, dob, gender, id(generated by method) and getters for these fields
////
////
////        Customer will have customerId, balance, buy method and active flag
////        Seller will have sellerId, list of goods(computers, food stuff, clothes, etc) and revenue and active flag
////        Admin will have adminId and assigned list of customers and sellers, also method to suspend seller or customer
////suspend customer and seller byb id
////
////
////public class GFG {
////
////    // Main driver method
////    public static void main(String[] args)
////    {
////        // Create an empty hash map by declaring object
////        // of string and integer type
////        HashMap<String, Integer> map = new HashMap<>();
////
////        // Adding elements to the Map
////        // using standard put() method
////        map.put("vishal", 10);
////        map.put("sachin", 30);
////        map.put("vaibhav", 20);
////
////        // Print size and content of the Map
////        System.out.println("Size of map is:- "
////                + map.size());
////
////        // Printing elements in object of Map
////        System.out.println(map);
////
////        // Checking if a key is present and if
////        // present, print value by passing
////        // random element
////        if (map.containsKey("vishal")) {
////
////            // Mapping
////            Integer a = map.get("vishal");
////
////            // Printing value for the corresponding key
////            System.out.println("value for key"
////                    + " \"vishal\" is:- " + a);
////        }
////    }
////}
////
////        Main class called 'Market'
//
//package Inheritence.Market;
//import Inheritence.Market.ENUMS.Gender;
//
//import java.time.LocalDate;
//import java.util.Arrays;
//import java.util.List;
//import java.util.UUID;
//
//
//public class User {
//    private String fullName;
//    private LocalDate DoB;
//    private Gender gender;
//    private String ID; //(generated by method)
//
//    LocalDate dob = LocalDate.now();
//    User user = new User("Maryia Paklonskaya", dob, Gender.FEMALE);
//
//
//    public User(String fullName, LocalDate DoB, Gender gender){
//        this.fullName = fullName;
//        this.DoB = DoB;
//        this.gender = gender;
//        this.ID = generateID();
//    }
//
//    public String generateID(){
//        String uniqueKey = UUID.randomUUID().toString();
//        return uniqueKey;
//    }
//
//    //getters for these fields
//    public String getName(){
//        return fullName;
//    }
//
//    public LocalDate getDoB(){
//        return DoB;
//    }
//
//    public String getGender(){
//        return gender;
//    }
//
//    public String getID(){
//        return ID;
//    }
//
//}
//
//class Customer extends User{
//    private String customerID;
//    private double balance = 0.00;
//    private boolean activeCustomer = true;
//    List<Seller> sellers;
//
//    public Customer(String fullName, LocalDate DoB, Gender gender, double balance, boolean activeCustomer, List<Seller> sellers) {
//        super(fullName, DoB, gender);
//        this.customerID = "customer_" + generateID(); //generateID() ??
//        this.balance = balance;
//        this.activeCustomer = activeCustomer;
//        this.sellers = sellers;
//    }
//
//    public void addBalance(double amount){
//        balance+=amount;
//    }
//
//    public boolean customerBuys(int sellerID, int productID){
//        boolean result = false;
//        Seller relevantSeller = null;
//
//        for(Seller seller : sellers){
//            if(sellerID.equals(seller.getSellerID())){
//                relevantSeller = seller;
//            }
//        }
//
//        Product relevantProduct = null;
//
//        for(Product product : relevantSeller.availableProducts){
//            if(products.equals(product.getProductID())){
//                relevantProduct = product;
//            }
//        }
//
//        if(relevantProduct.getPrice() > balance){
//            System.out.println("Sorry you do not have enough money");
//            return;
//        } else
//
//        if (customer.activeCustomer == true){
//            if (customer.balance > 0)) {
//        }
//        else System.out.println("Customer is not active or do not have money");
//
//
//       // should check if active
////    check if have balance
////            should check if item is available
//
//        return result;
//    }
//    }}
//
//
//
////    Customer[] obj = new Customer[2]; //create array of Customers objects
////    //create & initialize actual employee objects using constructor
////    obj[0] = new Customer(111.12, true);
////    obj[1] = new Customer(0, false);
////
////    //display the object data
////    System.out.println("Employee Object 1:");
////    customers[0].showData();
////    System.out.println("Employee Object 2:");
////    customers[1].showData();
//
//
//class Seller extends User{
//    private String sellerID;
//    private double revenue = 0.00;
//    private boolean activeSeller = true;
//
//    public List<Product> availableProducts = Arrays.asList(
//            new Product(23.5),
//            new Product(123.0),
//            new Product(3456.78)
//    );
//
//    //list of goods
//
//    public Seller(String fullName, LocalDate DoB, Gender gender, boolean activeSeller) {
//        super(fullName, DoB, gender);
//        sellerID = "seller_" + generateID(); //generateID() ??
//        revenue = 0.00;
//        this.activeSeller = activeSeller;
//    }
//
//    public String getSellerID(){
//        return sellerID;
//    }
//
//    setStatus(){
//        this.activeSeller = activeSeller;
//    }
//
//
//
////    list of the
////    balance in the items -if bought
//
//}
//
//class Admin extends User{
//
//    private String adminID;
//
//    public Admin(String fullName, LocalDate DoB, String gender) {
//        super(fullName, DoB, gender);
//        this.adminID = "admin" + super.generateID(); //generateID() ??
//    }
//
//    //assigned list of customers and sellers
//
//    public void suspendUser(String userID){
//        for(Customer customer : customers) {
//            if(customer.getID().equals(userID) {
//                Customer.setStatus();
//            }
//        }
//        for(int i = 0; i < customers.length(); i++){
//            if(customers[i].)
//        }
//
//                )
//        customers[0].set(userID, false);
//
//
//
//    }
//
//
//
//    //  method to suspend seller or customer
//
//
//
//}
